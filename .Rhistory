PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3),
#      "character", "integer", rep("numeric", 6), "NULL",
#      "numeric", "numeric", "NULL", rep("numeric",71),
#      "NULL", rep("numeric",2), "NULL", rep("numeric",34),
#      "NULL", "numeric", "numeric", "NULL",
#      rep("numeric", 9), "NULL", rep("numeric" ,19),
#      "character" )
)
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3)
#      "character", "integer", rep("numeric", 6), "NULL",
#      "numeric", "numeric", "NULL", rep("numeric",71),
#      "NULL", rep("numeric",2), "NULL", rep("numeric",34),
#      "NULL", "numeric", "numeric", "NULL",
#      rep("numeric", 9), "NULL", rep("numeric" ,19),
#      "character" )
))
summary(PMLfull)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3), rep("numeric",154),
#      "character", "integer", rep("numeric", 6), "NULL",
#      "numeric", "numeric", "NULL", rep("numeric",71),
#      "NULL", rep("numeric",2), "NULL", rep("numeric",34),
#      "NULL", "numeric", "numeric", "NULL",
#      rep("numeric", 9), "NULL", rep("numeric" ,19),
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3), rep("numeric",154)
)
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3), rep("numeric", 1),
#      "character", "integer", rep("numeric", 6), "NULL",
#      "numeric", "numeric", "NULL", rep("numeric",71),
#      "NULL", rep("numeric",2), "NULL", rep("numeric",34),
#      "NULL", "numeric", "numeric", "NULL",
#      rep("numeric", 9), "NULL", rep("numeric" ,19),
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3), rep("numeric", 1),
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", rep("NULL", 3),
"character" )
)
summary(PML[,1:5])
summary(PMLfull[,1:5])
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", "NULL", "NULL", "NULL", "numeric",
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", "NULL", "NULL", "NULL", "character", numeric",
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
, colClasses =
c("NULL", "character", "NULL", "NULL", "NULL", "character", "numeric",
"character" )
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
)[,c(2,6:13)]
summary(PMLfull)
summary(PMLfull[,8:9])
library(AppliedPredictiveModeling)
library(caret)
data(segmentationOriginal)
summary(segmentationOriginal )
segTran <- segmentationOriginal[Case == "Train",]
segTran <- segmentationOriginal[segmentationOriginal$Case == "Train",]
?rpart
segTran.cart <- rpart(Class ~ ., segtran)
library(rpart)
segTran.cart <- rpart(Class ~ ., segtran)
segTran.cart <- rpart(Class ~ ., segTran)
plot(segTran,cart); text(segTran.cart, cex = 0.6)
plot(segTran.cart); text(segTran.cart, cex = 0.6)
segTran.cart
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntecnch2, segTran)
plot(segTran.cart); text(segTran.cart, cex = 0.6)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntencnch2, segTran)
plot(segTran.cart); text(segTran.cart, cex = 0.6)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntench2, segTran)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ Totallntench2, segTran)
names(segTran)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntenCh2, segTran)
plot(segTran.cart); text(segTran.cart, cex = 0.6)
predict(segTran.cart)
roc(segTran.cart)
segTran.cart0 <- rpart(Class ~ ., segTran)
plot(segTran.cart0); text(segTran.cart0, cex = 0.6)
set.seed(125)
segTran.cart0 <- rpart(Class ~ ., segTran)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntenCh2, segTran)
plot(segTran.cart0); text(segTran.cart0, cex = 0.6)
set.seed(125)
segTran.cart0 <- rpart(Class ~ ., segTran)
segTran.cart <- rpart(Class ~ FiberWidthCh1
+ VarIntenCh4
+ PerimStatusCh1
+ TotalIntenCh2, segTran)
plot(segTran.cart0); text(segTran.cart0, cex = 0.4)
??rpart
library(pgmm)
data(olive)
olive <- olive[,-1]
??tree
molive <- rpart(olive$Area ~ .)
newdata  <- as.data.frame(t(colMeans(olive)))
predict(molive, newdata)
molive <- rpart(olive$Area ~ ., olive)
predict(molive, newdata)
rpart(olive$Area ~ .)
summary(olive)
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train <- sample(1:dim(SAheart)[1], size=dim(SAheart)[1]/2, replace = F)
trainSA <- SAheart[train,]
testSA <- SAheart[-train,]
summary(trainSA)
set.seed(13234)
modelSA <- glm( chd ~ age + alcohol + obesity + tobacco + typea + ldl, trainSA)
modelSA <- glm( chd ~ age + alcohol + obesity + tobacco + typea + ldl, trainSA, method ="glm", family = "binomial")
?glm
modelSA <- glm( chd ~ age + alcohol + obesity + tobacco + typea + ldl, data = trainSA, method ="glm", family = "binomial")
frml <- "chd ~ age + alcohol + obesity + tobacco + typea + ldl"
modelSA <- glm( frml , data = trainSA, method ="glm", family = "binomial")
frml <- "chd ~ age + alcohol + obesity + tobacco + typea + ldl"
modelSA <- glm( frml , data = trainSA, family = "binomial")
predict(modelSA, testSA)
results <- predict(modelSA, testSA)
missClass <- function(values, prediction) {sum(((prediction > 0.5) * 1) != values)/length(values)}
missClass(trainSA$chd, results)
missClass(testSA$chd, results)
missClass(trainSA$chd, predict(modelSA, trainSA))
missClass(testSA$chd, predict(modelSA, testSA))
set.seed(13234)
frml <- "chd ~ age + alcohol + obesity + tobacco + typea + ldl"
modelSA <- glm( frml , data = trainSA, family = "binomial")
missClass <- function(values, prediction) {sum(((prediction > 0.5) * 1) != values)/length(values)}
missClass(trainSA$chd, predict(modelSA, trainSA))
missClass(testSA$chd, predict(modelSA, testSA))
missClass <- function(values, prediction) {sum(((prediction > 0.5) * 1) != values)/length(values)}
data(vowel.train)
data(vowel.test)
summary(vowel.train)
vowel.train$y <- factor(vowwel.train$y)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
set.seed(33833)
??forest
RFFIT <- train(y ~ ., data = vowel.train, method="rf")
library()
RFFIT <- train(y ~ ., data = vowel.train, method="rf")
rfNews()
RFFIT <- train(y ~ ., data = vowel.train, method="rf")
summary(RFFIT)
varImp(RFFIT)
set.seed(33833)
RFFIT <- train(y ~ ., data = vowel.train, method="rf")
varImp(RFFIT)
library(AppliedPredictiveModeling)
library(caret)
data(segmentationOriginal)
summary(segmentationOriginal )
segTran <- segmentationOriginal[segmentationOriginal$Case == "Train",]
set.seed(125)
segmodel <- train(Class ~ ., data=segTran, model = "CART")
segmodel
library(AppliedPredictiveModeling)
library(caret)
data(segmentationOriginal)
summary(segmentationOriginal )
segTran <- segmentationOriginal[segmentationOriginal$Case == "Train",]
set.seed(125)
segmodel <- train(Class ~ ., data=segTran, model = "CART")
plot(segmodel)
par(cex = 0.8)
plot(segmodel)
plot(segmodel, cex = 2)
plot(segmodel, cex = 2)
print(segmodel)
str(segmodel)
summary(segmodel)
print(segmodel$ntree)
plot(segmodel$ntree)
plot(segmodel)
?train
names(getModelInfo())
set.seed(125)
segmdl <- train(Class ~ ., data=segTran, model = "rpart")
plot(segmdl)
str(segmdl)
plot(segmdl$finalmodel)
segmdl$finalmodel
segmdl$finalModel
plot(segmdl$finalModel)
str(segmdl$finalModel)
plot(segmdl$finalModel)
print(segmdl$finalModel)
set.seed(125)
segmdl1 <- train(segTran,Class, model = "rpart")
set.seed(125)
segmdl1 <- train(segTran, segTran$Class, model = "rpart")
set.seed(125)
segmdl1 <- train(segTran, segTran$Class, method = "rpart")
plot(segmdl1$finalModel)
text(segmdl1$finalModel)
text(segmdl1$finalModel, cex = 0.6)
plot(segmdl1$finalModel)
varImp(segmdl1)
set.seed(125)
segmdl1 <- train(segTran[,-1], segTran$Class, method = "rpart")
varImp(segmdl1)
summary(segTran)
set.seed(125)
segmdl1 <- train(segTran[,-3], segTran$Class, method = "rpart")
varImp(segmdl1)
plot(segmdl1$finalModel)
text(segmdl1$finalModel, cex = 0.6)
print(segmdl1$finalModel)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y <- factor(vowel.train$y)
vowel.test$y <- factor(vowel.test$y)
data(vowel.train)
summary(vowel.test)
set.seed(33833)
rf.mod <- train(vowel.train[,-1], vowel.train$y, method = "rf")
gbm.mod <- train(vowel.train[,-1], vowel.train$y, method = "gbm")
summary(rf.mod)
plot(rf.mod)
plot(gbm.mod)
plot(rf.mod$finalModel)
plot(gbm.mod$finalModel)
next <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
)[,c(14:18)]
summary(next)
nextVarbs <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
)[,c(14:18)]
summary(nextVarbs)
nextVarbs <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
)[,c(19:22)]
summary(nextVarbs)
nextVarbs <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!"
)[,c(19:22)]
summary(PMLfull)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", colClasses = c("character", rep("numeric",159))
)[,c(2,6:13,)]
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", colClasses = c(rep("character", 16), rep("numeric",144))
)[,c(2,6:13,)]
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
colClasses = c("NULL", "character", rep("character", 16)) #, rep("numeric",144))
)
summary(PNLfull[,1:5])
summary(PMLfull[,1:5])
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
colClasses = c("NULL", "character", rep("NULL",3) rep("character", 16)) #, rep("numeric",144))
)
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
colClasses = c("NULL", "character", rep("NULL",3), rep("character", 16)) #, rep("numeric",144))
)
summary(PMLfull[,1:5])
?read.table
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3)
PMLhead
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character",
rep("numeric", 5)), "NULL", rep("numeric",144))
)
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character",
rep("numeric", 5), "NULL", rep("character",144))
)
PMLhead
PMLhead[,1:12]
summary(PMLfull[,1:12])
PMLhead[,1:12]
clear()
PMLhead[,1:10]
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3),
"character", rep("numeric", 4),
rep("character",144))
)
PMLhead[,1:10]
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character", rep("numeric", 3),
rep("character",144))
)
read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character", rep("numeric", 3),
rep("character",160))
)
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character", rep("numeric", 3),
rep("character",150))
)
PMLhead[,1:10]
PMLhead <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!", nrows = 3,
colClasses = c("NULL", "character", rep("NULL",3), "character", rep("numeric", 4), #6
rep("NULL", 3),
rep("character",147))
)
PMLhead[,1:10]
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
)[, c(-1, -2:5)]
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
)[, -c(1, 2:)]
PMLfull <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-training.csv",
header = TRUE, sep = ",", na.strings = "#DIV/0!",
)
summary(PMLfull[,1:5])
summary(PMLfull[,6:10])
summary(PMLfull[,11:15])
summary(PMLfull[,16:20])
summary(PMLfull[,21:25])
summary(PMLfull[,26:30])
summary(PMLfull[,31:35])
summary(PMLfull[,36:40])
summary(PMLfull[,41:45])
summary(PMLfull[,46:50])
summary(PMLfull[,51:55])
summary(PMLfull[,56:60])
summary(PMLfull[,61:65])
summary(PMLfull[,66:70])
summary(PMLfull[,71:75])
summary(PMLfull[,76:80])
summary(PMLfull[,81:85])
summary(PMLfull[,86:90])
summary(PMLfull[,91:95])
summary(PMLfull[,96:100])
summary(PMLfull[,101:105])
summary(PMLfull[,106:110])
summary(PMLfull[,111:115])
summary(PMLfull[,116:120])
summary(PMLfull[,121:125])
summary(PMLfull[,126:130])
summary(PMLfull[,131:135])
summary(PMLfull[,136:140])
summary(PMLfull[,141:145])
summary(PMLfull[,146:150])
summary(PMLfull[,151:155])
summary(PMLfull[,156:160])
PMLuseful <- PMLfull[, c(2, 6:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160 )]
PMLuseful$classe <- as.factor(PMLuseful$classe)
summary(PMLuseful)
PMLuseful$user_name <- as.factor(PMLuseful$user_name)
PMLtest <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-testing.csv",
header = TRUE, sep = ",")[, c(2, 6:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160 )]
PMLtest$classe <- as.factor(PMLtest$classe)
PMLtest$user_name <- as.factor(PMLtest$user_name)
PMLtest
PMLtest <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-testing.csv",
header = TRUE, sep = ",")
summary(PMLtest)
PMLtest <- read.table(
"C:\\Users\\steve\\Desktop\\Coursera\\MachLearn\\pml-testing.csv",
header = TRUE, sep = ",")[, c(2, 6:11, 37:49, 60:68, 84:86, 102, 113:124, 140, 151:160 )]
PMLtest$user_name <- as.factor(PMLtest$user_name)
PMLtest$problem_id
one.mdl <-train(classe ~ ., PMLuseful, method = "rpart)
")"
one.mdl <-train(classe ~ ., PMLuseful, method = "rpart")
plot(one.mdl)
plot(one.mdl$finalModel)
labels(one.mdl$finalModel)
text(one.mdl$finalModel)
one.pred <- predict(one.mdl, PMLtest)
plot(one.pred)
one.pred
summary(PMLuseful$classe)
two.mdl <-train(classe ~ ., PMLuseful, method = "rf")
two.pred <- predict(two.mdl, PMLtest)
plot(two.pred)
save.image("C:/Users/steve/Desktop/Coursera/MachLearn/CourseraMachLearn/middle.RData")
varImp(two.mdl)
?varImp
summary(PMLuseful$num_window)
three.mdl <-train(classe ~ ., PMLuseful, method = "C5.0")
three.mdl <-train(classe ~ ., PMLuseful, method = "J48")
three.mdl <-train(classe ~ ., PMLuseful, method = "JRip")
three.mdl <-train(classe ~ ., PMLuseful, method = "knn")
three.pred <- predict(three.mdl, PMLtest)
summary(PMLuseful)
summary(PMLuseful[, -c(2,3)])
PML <- PMLuseful[, -c(2,3)]
knn.mdl <- knn3(classe ~ ., data = PML, k=5)
plot(knn.mdl)
knn.mdl
knn.pred <- predict(knn.mdl, PMLtest[, -c(2,3)])
plot(knn.pred)
knn.pred
two.mdl <-train(classe ~ ., PML, method = "rf")
two.mdl
varImp(two.mdl)
two.pred
two.mdl <-train(classe ~ ., PML, method = "rf")
library(caret)
two.mdl <-train(classe ~ ., PML, method = "rf")
extracting sunbeams from cucumbers
varImp(two.mdl)
?write
rfVarList <- varImp(two.mdl)
two.pred <- predict(two.mdl, PMLtest[, -c(2,3)])
plot(two.pred)
two.pred
save(two.mdl, file = "caretRandomForestOut.rds")
knn.mdl <- knn3(classe ~ ., data = PML, k=5)
knn.pred <- predict(knn.mdl, PMLtest[, -c(2,3)])
knn.pred
two.pred
library()
library()
library(shiny)
